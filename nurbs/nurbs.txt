Closed makes no sense, but it would be useful with open and clamped.

adrianVmariano (adrianVmariano)
Well, I can imagine you start with a clamped curve and then you connect to axis and somehow close it.
I mean, draw the line on the axis.

Richard Milewski
I'll take a crack at writing it. I'm sure I'll learn a lot from your review.

adrianVmariano (adrianVmariano)
I don't think I know what closing an "open" curve is.
My review?

Richard Milewski
Merging any of my code without you and Revar reviewing it is the the path to disaster.

adrianVmariano (adrianVmariano)
That's not true.  You've merged stuff, though admitedly not tricky new features.
Seems like to connect to the axis you basically need to have knots at the ends of the original curve with multiplicity equal to degree
 and then you would pick control points that give you a straight line to the axis, and you would need knots on the axis with multiplicity degree+1.
Or if the intention is that the user specify it as "clamped" then you can just do multiplicity 1.
It seems like it should be possible to also produce a "closed" output that will include the line along the axis.
One thing that may make this a bit trickier than the bezier case is that bezier paths are always cubic beziers, 
but NURBS are any degree, so you may have someone hand you a degree 12 NURBS and ask for the close-to-path.
I am not sure if that means you'll need to add a lot of control points or what, since I don't really understand NURBS.  :)

Richard Milewski
Well with clamped, you just need to have a line from the first and last points in the list going to the axis.   Open I haven't figured out quite yet.

adrianVmariano (adrianVmariano)
I don't think open makes sense, because with open you don't have control of the start or end of the cruve.
Frankly I think open is basically useless.
The way you use open is by constructing a knot/control point configuration which is actually clamped or closed
---just you did it explicitly instead of having the program do it for you.

Richard Milewski
We'll we'd have control of it if we understood it better.

adrianVmariano (adrianVmariano)
I mean, I guess in principle you can understand what the ends are doing, but I don't think in practice.

Richard Milewski
Still trying to get my head around the knots, weights, and mult lists, and how they interact.

adrianVmariano (adrianVmariano)
Ok.  As a starting point, always use uniform knots with the exception of changing the multiplicity.
So don't give the knots parameter, only the mult parameter.
I would also suggest as a starting point, stick to uniform weights as well.  
The mult parameter repeats the knots, so if you have mult = [1,1,3,1,1] then it means you have 7 knots total, but the middle one is repeated 3 times.
So only 5 different values.  And what matters is that repetition.  decreases how smooth the curve is at the point corresponding to the knot. 

Richard Milewski
Ok.   I missed that!   

adrianVmariano (adrianVmariano)
If you can improve the docs feel free.  :)
This stuff is NOT simple.

Richard Milewski
That I figured out!

adrianVmariano (adrianVmariano)
I mean, it might be that that kind of thing belongs in a tutorial.
Anyways, so every knot repetition lowers the number of derivatives the curve has at the knot point.
So if you are doing a cubic NURBS then 3 repetitions lowers it to zero derivatives and you get a corner.
I actually kinda suspect that mainly it's useful to have either 1 repetition or d repetitions where d is the degree.
So if you scroll through the examples you can see ones where the curve comes to a sharp point because I set mult to equal the degree.
You cannot have more repetitions of a knot than the degree.
(If you run the math you get a discontinuous curve.)

Richard Milewski
Ok that helps.   Sorry, but I have to go AFK for a bit.

adrianVmariano (adrianVmariano)
There is a strict requirement of how many control points there need to be based on the degree and knot count.
I'll add...maybe you won't see it until later, that the clamped case is an exception to the above:  you have degree+1 knots at the start and end.  
This is what enforces that the curve actually pass through the control points at the ends.

Richard Milewski
So the tutorial should be called "NURBS for noobs"
adrianVmariano (adrianVmariano)
So the "clamped" option basically manipulates the input you give it by adding those extra knots.  
If you use the "open" option and explicitly repeat the starting and ending knots you'll get a clamped curve, that passes through its start and end points.

Richard Milewski
OK.  I need to show that in a couple examples.

adrianVmariano (adrianVmariano)
Like we could do everything with "open" but we would need to know a little more about how to manipulate the knots and control points.
The "closed" case creates a curve that closes on itself by repeating the correct number of knots and control points at the ends so the curve wraps around.
It took me weeks to figure out how many points needed to be repeated.
And it obviously changes if you change the degree.  :)
So again you could create closed curves manually just like you could do so with clamped curves and then use "open" but you'd have to know more.  
And it would be a bigger pain in either case if you decided to change degree for some reason.

adrianVmariano (adrianVmariano)
Regarding the NURBS examples, there are examples of manually created clamped curves that use "open" 
but I don't think I made any examples of manually created "closed" NURBS curves.
f